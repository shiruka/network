plugins {
  id "java"
  id "java-library"
  id "checkstyle"
  id "maven-publish"
  id "signing"
  id "io.github.gradle-nexus.publish-plugin" version "1.1.0"
}

group "io.github.shiruka"

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

compileJava {
  options.deprecation true
  options.encoding "UTF-8"
}

task sourcesJar(type: Jar, dependsOn: classes) {
  classifier "sources"
  from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  javadoc.options.encoding = "UTF-8"
  javadoc.options.tags = ["todo"]
  javadoc.options.addBooleanOption("html5", true)
  classifier "javadoc"
  from javadoc.destinationDir
}

checkstyle {
  configFile = rootProject.file("checkstyle.xml")
  checkstyleTest.enabled = false
}

test {
  useJUnitPlatform()
}

artifacts {
  archives sourcesJar
  archives javadocJar
}

repositories {
  mavenCentral()
  maven { url "https://jitpack.io" }
  maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
  mavenLocal()
}

dependencies {
  compileOnlyApi "org.jetbrains:annotations:${annotations}"
  annotationProcessor "org.jetbrains:annotations:${annotations}"

  compileOnlyApi "org.projectlombok:lombok:${lombok}"
  annotationProcessor "org.projectlombok:lombok:${lombok}"

  compileOnlyApi "io.github.shiruka:api:${api}"
  compileOnlyApi "io.netty:netty-all:${nettyall}"
  compileOnlyApi "com.google.guava:guava:${guava}"
  compileOnlyApi "com.google.inject:guice:${guice}"
  compileOnlyApi "it.unimi.dsi:fastutil:${fastutil}"
  compileOnlyApi "it.unimi.dsi:fastutil-core:${fastutil}"
  compileOnlyApi "tr.com.infumia:InfumiaShared:${infumia}"
  compileOnlyApi "org.reflections:reflections:${reflections}"
  compileOnlyApi "org.apache.logging.log4j:log4j-api:${log4j}"
  compileOnlyApi "com.nimbusds:nimbus-jose-jwt:${nimbusjosejwt}"
  compileOnlyApi "org.apache.commons:commons-lang3:${commonslang3}"
  compileOnlyApi "org.apache.commons:commons-math3:${commonsmath3}"
  compileOnlyApi "org.apache.logging.log4j:log4j-iostreams:${log4j}"
  compileOnlyApi "org.apache.logging.log4j:log4j-slf4j-impl:${log4j}"
  compileOnlyApi "com.fasterxml.jackson.core:jackson-databind:${jacksondatabind}"
  compileOnlyApi "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:${jacksondatabind}"

  testAnnotationProcessor "org.projectlombok:lombok:${lombok}"
  testAnnotationProcessor "org.jetbrains:annotations:${annotations}"
  testImplementation "org.junit.jupiter:junit-jupiter:${junitjupiter}"
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      groupId project.group
      artifactId project.name
      version project.version

      from components.java
      artifact tasks.sourcesJar
      artifact tasks.javadocJar
      pom {
        name = "Shiru ka Network"
        description = "A network library to handle RakNet packets."
        url = "https://shiruka.github.io/"
        licenses {
          license {
            name = "MIT License"
            url = "https://mit-license.org/license.txt"
          }
        }
        developers {
          developer {
            id = "portlek"
            name = "Hasan Demirta≈ü"
            email = "utsukushihito@outlook.com"
          }
        }
        scm {
          connection = "scm:git:git://github.com/shiruka/network.git"
          developerConnection = "scm:git:ssh://github.com/shiruka/network.git"
          url = "https://github.com/shiruka/network"
        }
      }
    }
  }
}

signing {
  useGpgCmd()
  sign publishing.publications.mavenJava
}

nexusPublishing {
  repositories {
    sonatype()
  }
}
